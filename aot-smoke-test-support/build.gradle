plugins {
	id "java-library"
	id "io.spring.javaformat"
	id "org.springframework.boot" apply false
}

repositories {
	maven {
		url "https://repo.spring.vmware.com/artifactory/spring-commercial-snapshot-local"
		credentials {
			username System.env['REPO_SPRING_VMWARE_COM_USERNAME']
			password System.env['REPO_SPRING_VMWARE_COM_PASSWORD']
		}
		mavenContent {
			snapshotsOnly()
			includeGroupByRegex("io.micrometer.*")
			includeGroupByRegex("org.springframework.*")
		}
	}
	maven {
		url "https://repo.spring.vmware.com/artifactory/spring-commercial-release-local"
		credentials {
			username System.env['REPO_SPRING_VMWARE_COM_USERNAME']
			password System.env['REPO_SPRING_VMWARE_COM_PASSWORD']
		}
		mavenContent {
			releasesOnly()
			includeGroupByRegex("io.micrometer.*")
			includeGroupByRegex("org.springframework.*")
		}
	}
	mavenCentral()
	maven {
		url "https://repo.spring.io/snapshot"
		mavenContent {
			snapshotsOnly()
		}
	}
	maven {
		url "https://repo.spring.io/milestone"
		mavenContent {
			releasesOnly()
		}
	}
}

dependencies {
	api(enforcedPlatform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
	runtimeOnly("io.projectreactor.netty:reactor-netty-http")
	api("org.springframework:spring-webflux")
	api("org.springframework.boot:spring-boot-starter-test")
}
